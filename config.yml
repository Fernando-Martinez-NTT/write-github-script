title: "GitHub Actions: Using GitHub Script"
description: >-
  This course covers how to use GitHub Script to quickly use octokit/rest in a
  GitHub Actions workflow.
tags:
  - GitHub Actions
  - Octokit
  - Workflow
  - Automation
template:
  repo: write-github-script-template
  name: write-github-script
before:
  - type: updateBranchProtection
  - type: createProjectBoard
    name: Learning Lab Project Board
    description: >-
      This board is used with the GitHub Actions: Using GitHub Script Learning Lab course.
    columns:
      - Triage Backlog
      - Triage Complete
    store:
      projectUrl: "{{ result.data.html_url }}"
  - type: createIssue
    title: Start here!
    body: 00_welcome-issue.md
    store:
      welcomeIssueUrl: "%result.data.html_url%"
      welcomeIssueNumber: "%result.data.number%"
    data:
      quicklink: "%payload.repository.html_url%/new/master?filename=.github/workflows/my-workflow.yml"
      actionsUrl: "%payload.repository.html_url%/actions/new"
    comments:
      - 00_explain-gh-script.md
      - 00_octokit-comparison.md
      - 00_welcome-activity.md

steps:
  - title: Start here!
    description: Create a pull request to add a workflow
    event:
      - pull_request.opened
      - pull_request.edited
    link: "{{store.welcomeIssueUrl}}"
    actions:
      - type: gate
        left: "%payload.pull_request.title%"
        store:
          firstPullNumber: "%payload.pull_request.number%"
          firstPullUrl: "%payload.pull_request.html_url%"
        operator: ===
        right: Automate issue responses

        # if those statments FAIL... do this
        else:
          - type: respond
            with: e-rename-pr.md
            data:
              title: Automate issue responses
        # if those gates === true Then do this stuff
      #######################################################
      # Validate the filepath for the my-workflow.yml file
      # get tree
      - type: getTree
        action_id: isInTree
        recursive: true
        sha: "%payload.pull_request.head.sha%"
      # check for a file in a tree
      - type: gate
        left: "%actions.isInTree.data.tree%"
        operator: includes
        right: "path:.github/workflows/my-workflow.yml"
        else:
          # if file isn't where expected find true location
          - type: findInTree
            path: my-workflow.yml
            tree: "%actions.isInTree.data.tree%"
            action_id: fileLocation
          # help user with proper file location
          - type: respond
            with: e-wrong-file-location.md
            data:
              haveFile: "%actions.fileLocation.path%"
              needFile: ".github/workflows/my-workflow.yml"
              editLink: "%payload.repository.html_url%/edit/%payload.pull_request.head.ref%/%actions.fileLocation.path%"
              fileName: my-workflow.yml
        # End filepath verification
        #######################################################
      - type: respond
        issue: "%registration.store.welcomeIssueNumber%"
        with: new-pull-request.md
        data:
          pullUrl: "%registration.store.firstPullUrl%"
      - type: closeIssue
        issue: "%registration.store.welcomeIssueNumber%"
      - type: createReview
        body: 01_merge-workflow.md
        event: APPROVE
        data:
          actionsUrl: "%payload.repository.html_url%/actions%"

  - title: Merge your first pull request
    description: Make the workflow available to the repository by merging the pull request
    event: pull_request.closed
    link: "{{store.firstPullUrl}}"
    actions:
      - type: createIssue
        title: Create an issue comment with GitHub Script
        body: 02_workflow-triggered.md
        store:
          secondIssueNumber: "%result.data.number%"
          secondIssueUrl: "%result.data.html_url%"
      - type: respond
        with: new-issue.md
        issue: "%registration.store.firstPullNumber%"
        data:
          issueURL: "%registration.store.secondIssueUrl%"

  - title: Add another GitHub Script action
    description: Use GitHub Script to place this issue into a project board
    # event: check_suite.completed # issue_comment.created/edited
    event: issue_comment.created
    link: "{{store.secondIssueUrl}}"
    actions:
      - type: gate
        left: "%payload.comment.user.login%"
        operator: ===
        right: "github-actions[bot]"
        else:
          - type: respond
            issue: "%registration.store.secondIssueNumber%"
            with: debug.md
            data:
              debug: "%payload%"
      - type: respond
        with: 03_workflow-success.md
        issue: "%registration.store.secondIssueNumber%"
      - type: octokit
        method: projects.listForRepo
        owner: "%payload.repository.owner.login%"
        repo: "%payload.repository.name%"
        store:
          boardID: "%result.data.0.id%"
      - type: octokit
        method: projects.listColumns
        project_id: "%registration.store.boardID%"
        store:
          columnID: "%result.data.0.id%"
      - type: respond
        with: 03_add-to-projects.md
        issue: "%registration.store.secondIssueNumber%"
        data:
          columnID: "%registration.store.columnID%"
          quicklink: "%payload.repository.html_url%/edit/master/.github/workflows/my-workflow.yml"
    #  new pull request
  - title: Modify your workflow file
    description: Create a pull request to add changes to your workflow
    event:
      - pull_request.opened
      - pull_request.edited
    link: "{{ store.secondIssueUrl }}"
    actions:
      - type: gate
        store:
          secondPullNumber: "%payload.pull_request.number%"
          secondPullUrl: "%payload.pull_request.html_url%"
        left: "%payload.pull_request.title%"
        operator: ===

        right: Add issues to project board

        # if those statments FAIL... do this
        else:
          - type: respond
            with: e-rename-pr.md
            data:
              title: Add issues to project board
        # if those gates === true Then do this stuff
      #######################################################
      # Validate the filepath for the my-workflow.yml file
      # get tree
      - type: getTree
        action_id: isInTree
        recursive: true
        sha: "%payload.pull_request.head.sha%"
      # check for a file in a tree
      - type: gate
        left: "%actions.isInTree.data.tree%"
        operator: includes
        right: "path:.github/workflows/my-workflow.yml"
        else:
          # if file isn't where expected find true location
          - type: findInTree
            path: my-workflow.yml
            tree: "%actions.isInTree.data.tree%"
            # multiple: true
            action_id: fileLocation
          # help user with proper file location
          - type: respond
            with: e-wrong-file-location.md
            data:
              haveFile: "%actions.fileLocation.path%"
              needFile: ".github/actions/cat-facts/action.yml"
              editLink: "%payload.repository.html_url%/edit/%payload.pull_request.head.ref%/%actions.fileLocation.path%"
              fileName: my-workflow.yml
        # End filepath verification
        #######################################################
      - type: respond
        issue: "%registration.store.secondIssueNumber%"
        with: new-pull-request.md
        data:
          pullUrl: "%registration.store.secondPullUrl%"
      - type: closeIssue
        issue: "%registration.store.secondIssueNumber%"
      - type: createReview
        body: 04_merge-workflow.md
        event: APPROVE
        data:
          actionsUrl: "%payload.repository.html_url%/actions"

  - title: Merge the updated workflow into the master branch
    description: Make the workflow available for use on the repository
    event: pull_request.closed
    link: "{{ store.secondPullUrl }}"
    actions:
      - type: createIssue
        title: Comment and triage with GitHub Script
        body: 05_workflow-triggered.md
        action_id: triggerIssue
        store:
          thirdIssueUrl: "%result.data.html_url%"
          thirdIssueNumber: "%result.data.number%"
      - type: respond
        with: new-issue.md
        issue: "%registration.store.secondPullNumber%"
        data:
          issueURL: "%registration.store.thirdIssueUrl%"

  - title: Break your workflow into multiple steps
    description: Separate the workflow concerns by adding more steps
    event: issue_comment.created
    link: "{{store.thirdIssueUrl}}"
    actions:
      - type: gate
        left: "%payload.comment.user.login%"
        operator: ===
        right: "github-actions[bot]"
        else:
          - type: respond
            issue: "%registration.store.secondIssueNumber%"
            with: debug.md
            data:
              debug: "%payload%"
      - type: octokit
        method: projects.listForRepo
        owner: "%payload.repository.owner.login%"
        repo: "%payload.repository.name%"
        action_id: projectBoard
      - type: octokit
        method: projects.listColumns
        project_id: "%actions.projectBoard.data.0.id%"
        action_id: listColumns
      - type: respond
        with: 06_steps-overview.md
        issue: "%registration.store.thirdIssueNumber%"
        data:
          projectTab: "%payload.repository.html_url%/projects/1"
      - type: respond
        with: 06_steps-activity.md
        issue: "%registration.store.thirdIssueNumber%"
        data:
          listProj: "%actions.projectBoard.data%"
          listCol: "%actions.listColumns.data%"
          columnID: "%actions.listColumns.data.0.id%"
          quicklink: "%payload.repository.html_url%/edit/master/.github/workflows/my-workflow.yml"
          actionsTab: "%paylaod.repository.html_url%/actions"

  - title: Create better comments
    description: Use a templated repsonse as the comment body
    event:
      - pull_request.opened
      - pull_request.edited
    link: "{{store.thirdPullUrl}}"
    actions:
      - type: gate
        store:
          thirdPullNumber: "%payload.pull_request.number%"
          thirdPullUrl: "%payload.pull_request.html_url%"
        left: "%payload.pull_request.title%"
        operator: ===
        right: Create better comments
        # if those statments FAIL... do this
        else:
          - type: respond
            with: e-rename-pr.md
            data:
              title: Create better comments
      - type: octokit
        method: projects.listForRepo
        owner: "%payload.repository.owner.login%"
        repo: "%payload.repository.name%"
        action_id: projectBoard
      - type: octokit
        method: projects.listColumns
        project_id: "%actions.projectBoard.data.0.id%"
        action_id: listColumns
      - type: respond
        issue: "%registration.store.thirdIssueNumber%"
        with: new-pull-request.md
        data:
          pullUrl: "%registration.store.thirdPullUrl%"
      - type: closeIssue
        issue: "%registration.store.thirdIssueNumber%"
      - type: respond
        with: 07_explain-node.md
      - type: respond
        with: 07_use-fs.md
        data:
          columnID: "%actions.listColumns.data.0.id%"
          quicklink: "%payload.repository.html_url%/edit/%payload.pull_request.head.ref%/.github/workflows/my-workflow.yml"

  - title: Use a templated response
    description: Create the comment body from a template using the Node.js file system module
    event: pull_request.synchronize
    link: "{{store.thirdPullUrl}}"
    actions:
      - type: createReview
        body: 08_merge-workflow.md
        event: APPROVE

  - title: Merge the updated workflow
    description: Merge the worklow to the master branch
    event: pull_request.closed
    link: "{{store.thirdPullUrl}}"
    actions:
      - type: octokit
        action_id: triggerIssue
        method: issues.create
        owner: "%payload.repository.owner.login%"
        repo: "%payload.repository.name%"
        title: It's alive!
        body: |
          ## Great Job so far!  

          Like before, now we have to wait for the workflow to run so that we can see the results.  

          ---

          I'll respond here once it has completed!
        labels: ["bug"]
        store:
          fourthIssueUrl: "%result.data.html_url%"
          fourthIssueNumber: "%result.data.number%"

      - type: respond
        with: new-issue.md
        issue: "%registration.store.thirdPullNumber%"
        data:
          issueURL: "%registration.store.fourthIssueUrl%"

  - title: Another workflow run
    description: Observe the results of an enhanced workflow run
    event: check_suite.completed
    link: "{{store.fourthIssueUrl}}"
    actions:
      - type: gate
        left: "%payload.check_suite.app.name%"
        operator: ===
        right: "GitHub Actions"
        else:
          - type: respond
            with: e-action-result.md
      - type: respond
        with: 09_workflow-completed.md
        issue: "%registration.store.fourthIssueNumber%"
      - type: respond
        with: 09_issue-activity.md
        issue: "%registration.store.fourthIssueNumber%"
        data:
          quicklink: "%payload.repository.html_url%/issues/new"

  - title: Course recap
    description: Final notes on course
    event: check_suite.completed
    link: "{{repoUrl}}/issue/8"
    actions:
      - type: gate
        left: "%payload.check_suite.app.name%"
        operator: ===
        right: "GitHub Actions"
        else:
          - type: respond
            with: e-action-result.md
      - type: respond
        with: 10_workflow-completed.md
        issue: 8
      - type: respond
        with: 10_course-recap.md
        issue: 8
      - type: removeBranchProtection
